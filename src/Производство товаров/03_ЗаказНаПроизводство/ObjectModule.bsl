Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

Перем СтруктураДанных;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("ЗаказНаПроизводствоГП_ПФ");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура ЗаказНаПроизводствоГП_ПФ() Экспорт
	
	СтруктураДанных = ПолучитьСтруктуруДанных();
	
	ЗаказНаПроизводство(СтруктураДанных.ЗаказНаПроизводствоГП1);
	ЗаказНаПроизводство(СтруктураДанных.ЗаказНаПроизводствоПФ);
	
КонецПроцедуры	
	
Процедура ЗаказНаПроизводство(ДокументСслыка) Экспорт
	
	ДокументОбъект = ДокументСслыка.ПолучитьОбъект();
	Если Ложь Тогда
		ДокументОбъект = Документы.ЗаказНаПроизводство.СоздатьДокумент();
	КонецЕсли;	
	
	КэшированныеЗначения = Неопределено;
	МассивДанных = Новый Массив;
	Для каждого СтрокаТЧ из ДокументОбъект.Продукция Цикл
		МассивДанных.Добавить(ДанныеПоНоменклатуре(СтрокаТЧ, ДокументОбъект));
	КонецЦикла;	
	
	ПланированиеПроизводства.ЗаполнитьДанныеСпецификаций(ДокументОбъект, МассивДанных, КэшированныеЗначения);
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Утверждения.ПроверитьИстину(ДокументОбъект.МатериалыИУслуги.Количество() > 0, "Не заполнена ТЧ ""МатериалыИУслуги""");
	
КонецПроцедуры

Функция ДанныеПоНоменклатуре(ДанныеСтроки, РеквизитыЗаказа)
	
	ДанныеПоНоменклатуре = Новый Структура;
	
	ДанныеПоНоменклатуре.Вставить("КлючСвязиПродукция",     ДанныеСтроки.КлючСвязи);
	ДанныеПоНоменклатуре.Вставить("Номенклатура",           ДанныеСтроки.Номенклатура);
	ДанныеПоНоменклатуре.Вставить("Характеристика",         ДанныеСтроки.Характеристика);
	ДанныеПоНоменклатуре.Вставить("Склад",                  ДанныеСтроки.Склад);
	ДанныеПоНоменклатуре.Вставить("Подразделение",          ДанныеСтроки.Подразделение);
	ДанныеПоНоменклатуре.Вставить("Спецификация",           ДанныеСтроки.Спецификация);
	ДанныеПоНоменклатуре.Вставить("Количество",             ДанныеСтроки.Количество);
	ДанныеПоНоменклатуре.Вставить("Упаковка",               ДанныеСтроки.Упаковка);
	ДанныеПоНоменклатуре.Вставить("НачалоПроизводства",     ДанныеСтроки.НачатьНеРанее);
	ДанныеПоНоменклатуре.Вставить("ДатаПотребности",        ДанныеСтроки.НачатьНеРанее);
	ДанныеПоНоменклатуре.Вставить("КлючСвязиПолуфабрикат");
	ДанныеПоНоменклатуре.Вставить("КлючСвязиЭтапы");
	
	ДанныеПоНоменклатуре.Вставить("Назначение",             ДанныеСтроки.Назначение);
	ДанныеПоНоменклатуре.Вставить("НазначениеЗаказа",       РеквизитыЗаказа.Назначение);
	
	ДанныеПоНоменклатуре.Вставить("ПодразделениеДиспетчер", РеквизитыЗаказа.Подразделение);
	
	Возврат ДанныеПоНоменклатуре;
	
КонецФункции

Функция НайтиЭлементСправочника(ИмяСправочника, Наименование)
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	
	
КонецФункции	

Функция ПолучитьСтруктуруДанных()
	
	Структура = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "ЗаказНаПроизводство");
	
	Возврат Структура;
	
КонецФункции




