Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

Перем СтруктураДанных Экспорт;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
	СтруктураДанных = ПолучитьСтруктуруДанных();
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ПередачаМатериалов");
	НаборТестов.Добавить("ПередачаМатериаловОтходы");
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура ПередачаМатериалов() Экспорт
	
	Для каждого Подразделение из СтруктураДанных.МассивПодразделений Цикл
		ПередачаМатериаловПоПодразделению(Подразделение);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПередачаМатериаловОтходы() Экспорт
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(СтруктураДанных.ПередачаМатериалов1);
	
	Для каждого ДокументСсылка из МассивДокументов Цикл
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
	Для каждого ДокументСсылка из МассивДокументов Цикл
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Организация");
		СтруктураРеквизиты = Новый Структура("Ссылка, Дата, Организация", ДокументСсылка, РеквизитыДокумента.Дата, РеквизитыДокумента.Организация);
		РеглУчетПроведениеСервер.ОтразитьДокумент(СтруктураРеквизиты, Истина);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПередачаМатериаловПоПодразделению(Подразделение) Экспорт
	
	ПараметрыДанных = Новый Структура;
	ПараметрыДанных.Вставить("Организация",   СтруктураДанных.Организация);
	ПараметрыДанных.Вставить("Подразделение", Подразделение);
	ПараметрыДанных.Вставить("Склад",         СтруктураДанных.Склад);
	ПараметрыДанных.Вставить("ЗаказыПоДату",  '0001-01-01');
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено);
	Обработки.ПолучениеИВозвратМатериалов.ПолучитьДанные(ПараметрыДанных, АдресХранилища);
	
	Данные = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	РеквизитыШапки = Новый Структура;
	РеквизитыШапки.Вставить("Организация",   СтруктураДанных.Организация);
	РеквизитыШапки.Вставить("Подразделение", Подразделение);
	РеквизитыШапки.Вставить("Склад",         СтруктураДанных.Склад);
	РеквизитыШапки.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВПроизводство"));
	
	ДанныеДляЗаполненияТовары = Новый ТаблицаЗначений;
	ДанныеДляЗаполненияТовары.Колонки.Добавить("Номенклатура");
	ДанныеДляЗаполненияТовары.Колонки.Добавить("Характеристика");
	ДанныеДляЗаполненияТовары.Колонки.Добавить("КоличествоУпаковок");
	ДанныеДляЗаполненияТовары.Колонки.Добавить("Количество");
	ДанныеДляЗаполненияТовары.Колонки.Добавить("Назначение");
	ДанныеДляЗаполненияТовары.Колонки.Добавить("Серия");
	
	Для каждого ДанныеСтроки Из Данные Цикл
		ДанныеДляЗаполнения = ДанныеДляЗаполненияТовары.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеДляЗаполнения, ДанныеСтроки);
		
		ДанныеДляЗаполнения.Количество = -ДанныеСтроки.Остаток;
		ДанныеДляЗаполнения.КоличествоУпаковок = ДанныеДляЗаполнения.Количество;
	КонецЦикла;	
		
	ПараметрыОснования = Новый Структура;
	ПараметрыОснования.Вставить("Товары",         ДанныеДляЗаполненияТовары);
	ПараметрыОснования.Вставить("РеквизитыШапки", РеквизитыШапки);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Док.Ссылка
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК Док
	|ГДЕ
	|	Док.Организация = &Организация
	|	И Док.Подразделение = &Подразделение
	|	И Док.Склад = &Склад
	|	И НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) = &Дата
	|	И НЕ Док.ПометкаУдаления";
	
	Запрос.Параметры.Вставить("Организация",   СтруктураДанных.Организация);
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	Запрос.Параметры.Вставить("Склад",         СтруктураДанных.Склад);
	Запрос.Параметры.Вставить("Дата",          '2016-01-31');
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДокументСсылка = Результат.Выгрузить()[0].Ссылка;
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
		ДокументОбъект.Товары.Очистить();
		ДокументОбъект.ВидыЗапасов.Очистить();
	Иначе	
		ДокументОбъект = Документы.ПередачаМатериаловВПроизводство.СоздатьДокумент();
	КонецЕсли;
	
	ДокументОбъект.Дата = '2016-01-31';
	ДокументОбъект.Заполнить(ПараметрыОснования);
	ДокументОбъект.ПотреблениеДляДеятельности = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ДокументОбъект.Статус = Перечисления.СтатусыПередачМатериаловВПроизводство.Принято;
	ДокументОбъект.Записать();
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);

	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Ссылка, "Дата, Организация");
	СтруктураРеквизиты = Новый Структура("Ссылка, Дата, Организация", ДокументОбъект.Ссылка, РеквизитыДокумента.Дата, РеквизитыДокумента.Организация);
	
	РеглУчетПроведениеСервер.ОтразитьДокумент(СтруктураРеквизиты, Истина);
	
КонецПроцедуры

Функция ПолучитьСтруктуруДанных()
	
	Структура = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "Данные");
	
	Массив = Новый Массив;
	Массив.Добавить(Структура.ПодразделениеГП);
	
	Структура.Вставить("МассивПодразделений", Массив);
	
	Возврат Структура;
	
КонецФункции




