Перем юТест;
Перем СтруктураДанных;

#Область ЮнитТестирование

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("Статьи");
	ВсеТесты.Добавить("Организация");
	ВсеТесты.Добавить("Подразделение");
	ВсеТесты.Добавить("Склады");
	ВсеТесты.Добавить("Контрагенты");
	ВсеТесты.Добавить("Номенклатура");
	ВсеТесты.Добавить("ГрафикРаботыПредприятия");
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура ПередЗапускомНабораТестов() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаНабораТестов() Экспорт
	
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура Организация() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Организация");
	
КонецПроцедуры

Процедура Подразделение() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Подразделение");
	
КонецПроцедуры

Процедура Номенклатура() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "ВидыНоменклатуры,Номенклатура");
	
КонецПроцедуры

Процедура Статьи() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Статьи");
	
КонецПроцедуры

Процедура Контрагенты() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Контрагенты");
	
КонецПроцедуры

Процедура Склады() Экспорт
	
	Массив = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Склады");
	
КонецПроцедуры

Процедура ГрафикРаботыПредприятия() Экспорт
	
	Календарь = Константы.ОсновнойКалендарьПредприятия.Получить();
	Если НЕ ЗначениеЗаполнено(Календарь) Тогда
		ВызватьИсключение "Не указан основной график работы предприятия" + Символы.ПС +
		"НСИ и Администрирование > Настройки параметров системы > Предприятие > Орнгаизации > График работы предприятия";
	КонецЕсли;	
	
	ДанныеПроизводственногоКалендаря = Справочники.ПроизводственныеКалендари.ДанныеПроизводственногоКалендаря(Календарь.ПроизводственныйКалендарь, 2016);
	Если ДанныеПроизводственногоКалендаря.Количество() = 0 Тогда
		ДанныеПроизводственногоКалендаря = Справочники.ПроизводственныеКалендари.РезультатЗаполненияПроизводственногоКалендаряПоУмолчанию(Календарь.ПроизводственныйКалендарь.Код, 2016);
		Справочники.ПроизводственныеКалендари.ЗаписатьДанныеПроизводственногоКалендаря(Календарь.ПроизводственныйКалендарь, 2016, ДанныеПроизводственногоКалендаря);
	КонецЕсли;	
	
	КалендарьОбъект = Календарь.ПолучитьОбъект();
	КалендарьОбъект.ДатаОкончания = Макс(КалендарьОбъект.ДатаОкончания, '2016-12-31');
	КалендарьОбъект.Записать();
	
КонецПроцедуры

