{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем ГенераторТестовыхДанных;
&НаКлиенте
Перем ЗапросыИзБД;
&НаКлиенте
Перем УтвержденияПроверкаТаблиц;

&НаКлиенте
Перем Форма;

#Область ЮнитТестирование

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин(""УтвержденияBDD"");
	Утверждения = КонтекстЯдра.Плагин(""БазовыеУтверждения"");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин(""СериализаторMXL"");
	ЗапросыИзБД = КонтекстЯдра.Плагин(""ЗапросыИзБД"");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин(""УтвержденияПроверкаТаблиц"");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить(""КоличествоМест"");
	НаборТестов.Добавить(""КоличествоМестОбеспечение"");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	Попытка
		Форма.Закрыть();
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура КоличествоМест() Экспорт
	
	Макет = ПолучитьМакет();
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""Ключ"", СтруктураДанных.ЗаказКлиента1);
	
	Форма = ПолучитьФорму(""Документ.ЗаказКлиента.ФормаОбъекта"", ПараметрыФормы);
	Форма.Открыть();
	
	Утверждения.ПроверитьРавенство(Форма.Элементы._КоличествоМест.Видимость, Истина, ""Нет поля Количество мест"");
	Утверждения.ПроверитьРавенство(Форма.Элементы.Товары.Подвал, Истина, ""Нет подвала"");
	
	СтрокаТЧ = Форма.Объект.Товары[0];
	СтрокаТЧ._КоличествоМест = 1;
	
	Форма.Элементы.Товары.ТекущаяСтрока = СтрокаТЧ.ПолучитьИдентификатор();
	Форма._КоличествоМестПриИзменении(Форма.Элементы._КоличествоМест);
	
	Утверждения.ПроверитьРавенство(0.5, СтрокаТЧ.Количество, ""Не рассчиталось количество"");
	Утверждения.ПроверитьРавенство(500, СтрокаТЧ.Сумма,      ""Не рассчиталась сумма"");
	
	Форма._ПересчитатьКоличествоМест();
	
КонецПроцедуры	

&НаКлиенте
Процедура КоличествоМестОбеспечение() Экспорт
	
	Макет = ПолучитьМакет(""ДанныеОбеспечение"");
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ПровестиДокумент(СтруктураДанных.ПоступлениеТоваровИУслуг1);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""Ключ"", СтруктураДанных.ЗаказКлиента1);
	
	Форма = ПолучитьФорму(""Документ.ЗаказКлиента.ФормаОбъекта"", ПараметрыФормы);
	Форма.Открыть();
	
	СтрокаТЧ = Форма.Объект.Товары[0];
	Форма.Элементы.Товары.ТекущаяСтрока = СтрокаТЧ.ПолучитьИдентификатор();
	
	Массив = Новый Массив;
	Массив.Добавить(ПредопределенноеЗначение(""Перечисление.ВариантыОбеспечения.Отгрузить""));
	Массив.Добавить(ПредопределенноеЗначение(""Перечисление.ВариантыОбеспечения.Требуется""));
	
	ФормаВыбора = ПолучитьФорму(""Перечисление.ВариантыОбеспечения.Форма.ИсполнениеЗаказа"",, Форма);
	ФормаВыбора.ОповеститьОВыборе(Массив);
	
	Утверждения.ПроверитьРавенство(2,  Форма.Объект.Товары.Количество(), ""Не верное количество строк"");
	Утверждения.ПроверитьРавенство(50, Форма.Объект.Товары.Итог(""_КоличествоМест""), ""Не верное итоговое количество мест"");
	
	Форма.Модифицированность = Ложь;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ПровестиДокумент(Ссылка)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьМакет(ИмяМакета = ""Данные"")
	
	ОбработкаОбъект = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбработкаОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",0da3b565-33f9-4d0e-9fe8-cb66d87934e4}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}