{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем ГенераторТестовыхДанных;
&НаКлиенте
Перем ЗапросыИзБД;
&НаКлиенте
Перем УтвержденияПроверкаТаблиц;

&НаКлиенте
Перем Форма;

#Область ЮнитТестирование

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин(""УтвержденияBDD"");
	Утверждения = КонтекстЯдра.Плагин(""БазовыеУтверждения"");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин(""СериализаторMXL"");
	ЗапросыИзБД = КонтекстЯдра.Плагин(""ЗапросыИзБД"");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин(""УтвержденияПроверкаТаблиц"");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить(""ЗачетОплаты"");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	Попытка
		//Форма.Модифицированность = Ложь;
		//Форма.Закрыть();
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗачетОплаты() Экспорт
	
	Макет = ПолучитьМакет(""Ссылки"");
	Ссылки = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет,,, Истина);
	УдалитьДокументыПоОрганизации(Ссылки.Организация);
	
	Макет = ПолучитьМакет();
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет,,, Истина);
	
	ПровестиДокумент(СтруктураДанных.ЗаказКлиента1);
	ПровестиДокумент(СтруктураДанных.ПоступлениеБезналичныхДС1);
	
	ПараметрыФормы = Новый Структура(""Документ"", СтруктураДанных.ЗаказКлиента1);
	Форма = ПолучитьФорму(""Обработка.ПомощникЗачетаОплат.Форма"", ПараметрыФормы);
	Форма.Открыть();
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Форма.Оплаты[0].ПолучитьИдентификатор());
	
	Форма.ПолучитьПодтверждениеЗачетаПлатежа(КодВозвратаДиалога.Да, МассивСтрок);
	Форма.СохранитьРезультатЗачетаОплатыИЗакрыть();
	
	Заказ = ПолучитьЗаказ(СтруктураДанных.ПоступлениеБезналичныхДС1);
	Утверждения.ПроверитьРавенство(СтруктураДанных.ЗаказКлиента1, Заказ, ""Не установился объект расчетов в поступлении ДС"");
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьЗаказ(ДокументДС)
	
	Возврат ДокументДС.РасшифровкаПлатежа[0].Заказ;
	
КонецФункции	

&НаСервереБезКонтекста
Процедура ПровестиДокумент(Ссылка)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьМакет(ИмяМакета = ""Данные"")
	
	ОбработкаОбъект = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбработкаОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции

#Область УдалениеДокументов

&НаСервереБезКонтекста
Процедура УдалитьДокументыПоОрганизации(Организация)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить(""Имя"");
	Таблица.Колонки.Добавить(""Отбор"");
	
	ДобавитьДокумент(Таблица, ""Документ.РасчетСебестоимостиТоваров"");
	ДобавитьДокумент(Таблица, ""Документ.РегламентнаяОперация"");
	ДобавитьДокумент(Таблица, ""Документ.ПереоценкаВалютныхСредств"");
	ДобавитьДокумент(Таблица, ""Документ.ПоступлениеБезналичныхДенежныхСредств"");
	ДобавитьДокумент(Таблица, ""Документ.СчетФактураПолученныйАванс"");
	ДобавитьДокумент(Таблица, ""Документ.СчетФактураВыданный"");
	ДобавитьДокумент(Таблица, ""Документ.СчетФактураВыданныйАванс"");
	ДобавитьДокумент(Таблица, ""Документ.ВзаимозачетЗадолженности"");
	ДобавитьДокумент(Таблица, ""Документ.РеализацияТоваровУслуг"");
	ДобавитьДокумент(Таблица, ""Документ.СписаниеБезналичныхДенежныхСредств"");
	ДобавитьДокумент(Таблица, ""Документ.ПоступлениеБезналичныхДенежныхСредств"");
	ДобавитьДокумент(Таблица, ""Документ.АктВыполненныхРабот"");
	ДобавитьДокумент(Таблица, ""Документ.РаспределениеПроизводственныхЗатрат"");
	ДобавитьДокумент(Таблица, ""Документ.СборкаТоваров"");
	ДобавитьДокумент(Таблица, ""Документ.ВыработкаСотрудников"");
	ДобавитьДокумент(Таблица, ""Документ.ВыпускПродукции"");
	ДобавитьДокумент(Таблица, ""Документ.ПередачаМатериаловВПроизводство"");
	ДобавитьДокумент(Таблица, ""Документ.ПеремещениеТоваров"");
	ДобавитьДокумент(Таблица, ""Документ.ЗаказНаПеремещение"");
	ДобавитьДокумент(Таблица, ""Документ.МаршрутныйЛистПроизводства"");
	ДобавитьДокумент(Таблица, ""Документ.СчетФактураПолученный"");
	ДобавитьДокумент(Таблица, ""Документ.ПоступлениеТоваровУслуг"");
	ДобавитьДокумент(Таблица, ""Документ.ПоступлениеУслугПрочихАктивов"");
	ДобавитьДокумент(Таблица, ""Документ.ПриемНаРаботу"");
	ДобавитьДокумент(Таблица, ""Документ.НачислениеЗарплаты"");
	ДобавитьДокумент(Таблица, ""Документ.ОтражениеЗарплатыВФинансовомУчете"");
	ДобавитьДокумент(Таблица, ""Документ.КорректировкаЗаказаМатериаловВПроизводство"");
	ДобавитьДокумент(Таблица, ""Документ.ЗаказНаПроизводство"");
	ДобавитьДокумент(Таблица, ""Документ.ЗаказКлиента"");
	
	ТекстЗапроса =
	""ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет КАК Док
	|ГДЕ
	|	Док.Организация = &Организация"";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить(""Организация"", Организация);
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Текст1 = СтрЗаменить(ТекстЗапроса, ""Документ.АвансовыйОтчет"", СтрокаТЗ.Имя);
		Текст1 = СтрЗаменить(Текст1, ""Док.Организация"", СтрокаТЗ.Отбор);
		
		Запрос.Текст = Текст1;
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого Строка1 из ТаблицаДокументов Цикл
			
			ДокументОбъект = Строка1.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект <> Неопределено Тогда
				
				Попытка
					ДокументОбъект.Удалить();
				Исключение
					//Сообщить(Строка(ТипЗнч(Объект)) + "": "" + Строка(Объект));
				КонецПопытки;
				
			КонецЕсли;	
					
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ДобавитьДокумент(Таблица, Имя, Отбор = ""Организация"")
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Имя   = Имя;
	НоваяСтрока.Отбор = Отбор;
	
КонецПроцедуры	

#КонецОбласти
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",b0266407-2fea-4a00-92d2-556f41c67084}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}