&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем ГенераторТестовыхДанных;
&НаКлиенте
Перем ЗапросыИзБД;
&НаКлиенте
Перем УтвержденияПроверкаТаблиц;

&НаКлиенте
Перем Форма;

#Область ЮнитТестирование

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("ЗаказНаПроизводствоПоЗаказамКлиента");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	Попытка
		Форма.Закрыть();
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

#Область Общие

&НаСервереБезКонтекста
Процедура ПровестиДокумент(Ссылка)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьМакет(ИмяМакета = "Данные")
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ЗаказНаПроизводствоПоЗаказамКлиента() Экспорт
	
	Макет = ПолучитьМакет("Ссылки");
	Ссылки = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	УдалитьДокументыПоОрганизации(Ссылки.Организация);
	
	Макет = ПолучитьМакет("ЗаказНаПроизводствоПоЗаказамКлиента");
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ПровестиДокумент(СтруктураДанных.ЗаказКлиента1);
	
	ПараметрыФормы = Новый Структура("ОтборПоТипуОбеспечения", ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.Производство"));
	
	Форма = ПолучитьФорму("Обработка.ОбеспечениеПотребностей.Форма", ПараметрыФормы);
	Форма.Открыть();
	
	Форма.ОтборПоПодразделению = Ссылки.Подразделение;
	Форма.ОтборПоПодразделениюПриИзменении(Форма.Элементы.ОтборПоПодразделению);
	
	Форма.Далее(Форма.Команды.Далее); // Шаг2 - Способ обеспечения
	Форма.Далее(Форма.Команды.Далее); // Шаг4 - Товары
	
	Утверждения.ПроверитьРавенство(Форма.Объект.ЗаказыКОбеспечению.Количество(), 1, "Должна быть одна строка товаров");
	Утверждения.ПроверитьРавенство(Форма.Объект.ЗаказыКОбеспечению.Итог("КЗаказу"), 25, "Количество должно быть 25");
	
	Утверждения.ПроверитьРавенство(Форма._ИтогоКЗаказу, 25, "Количество итого должно быть 25");
	
	Форма.Далее(Форма.Команды.Далее); // Шаг5 - Заказы
	
	Утверждения.ПроверитьРавенство(Форма.ТаблицаДокументы.Количество(), 1, "Должна быть одна строка документов");
	ЗаказНаПроизводство = Форма.ТаблицаДокументы[0].Документ;
	
	КоличествоПоДокументу = ИтогоКоличествоПоДокументу(ЗаказНаПроизводство, "Продукция");
	Утверждения.ПроверитьРавенство(КоличествоПоДокументу, 25, "Количество итого должно быть 25");
	
КонецПроцедуры

Функция ИтогоКоличествоПоДокументу(Ссылка, ИмяТЧ)
	
	Возврат Ссылка[ИмяТЧ].Итог("Количество");
	
КонецФункции	

#КонецОбласти

#Область УдалениеДокументов

&НаСервереБезКонтекста
Процедура УдалитьДокументыПоОрганизации(Организация)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Отбор");
	
	ДобавитьДокумент(Таблица, "Документ.РасчетСебестоимостиТоваров");
	ДобавитьДокумент(Таблица, "Документ.РегламентнаяОперация");
	ДобавитьДокумент(Таблица, "Документ.ПереоценкаВалютныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученныйАванс");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданный");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданныйАванс");
	ДобавитьДокумент(Таблица, "Документ.ВзаимозачетЗадолженности");
	ДобавитьДокумент(Таблица, "Документ.РеализацияТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.СписаниеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.АктВыполненныхРабот");
	ДобавитьДокумент(Таблица, "Документ.РаспределениеПроизводственныхЗатрат");
	ДобавитьДокумент(Таблица, "Документ.СборкаТоваров");
	ДобавитьДокумент(Таблица, "Документ.ВыработкаСотрудников");
	ДобавитьДокумент(Таблица, "Документ.ВыпускПродукции");
	ДобавитьДокумент(Таблица, "Документ.ПередачаМатериаловВПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ПеремещениеТоваров");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПеремещение");
	ДобавитьДокумент(Таблица, "Документ.МаршрутныйЛистПроизводства");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученный");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеУслугПрочихАктивов");
	ДобавитьДокумент(Таблица, "Документ.ПриемНаРаботу");
	ДобавитьДокумент(Таблица, "Документ.НачислениеЗарплаты");
	ДобавитьДокумент(Таблица, "Документ.ОтражениеЗарплатыВФинансовомУчете");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ЗаказКлиента");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет КАК Док
	|ГДЕ
	|	Док.Организация = &Организация";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Текст1 = СтрЗаменить(ТекстЗапроса, "Документ.АвансовыйОтчет", СтрокаТЗ.Имя);
		Текст1 = СтрЗаменить(Текст1, "Док.Организация", СтрокаТЗ.Отбор);
		
		Запрос.Текст = Текст1;
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого Строка1 из ТаблицаДокументов Цикл
			
			ДокументОбъект = Строка1.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект <> Неопределено Тогда
				
				Попытка
					ДокументОбъект.Удалить();
				Исключение
					//Сообщить(Строка(ТипЗнч(Объект)) + ": " + Строка(Объект));
				КонецПопытки;
				
			КонецЕсли;	
					
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ДобавитьДокумент(Таблица, Имя, Отбор = "Организация")
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Имя   = Имя;
	НоваяСтрока.Отбор = Отбор;
	
КонецПроцедуры	

#КонецОбласти
