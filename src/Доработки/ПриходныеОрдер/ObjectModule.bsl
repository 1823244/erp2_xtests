Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;
Перем РаботаСДокументами;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
	РаботаСДокументами = КонтекстЯдра.Плагин("Plugin_РаботаСДокументами");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("ПриходныйОрдерВерсионированиеВключено");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ПриходныйОрдерВерсионированиеВключено() Экспорт
	
	Результат = Метаданные.ОпределяемыеТипы.ВерсионируемыеДанные.Тип.СодержитТип(Тип("ДокументСсылка.ПриходныйОрдерНаТовары"));
	Утверждения.ПроверитьРавенство(Результат, Истина, "Тип ВерсионируемыеДанные не содержит документа ПриходныйОрдер");
	
	Результат = Метаданные.ПодпискиНаСобытия.ЗаписатьВерсиюДокумента.Источник.СодержитТип(Тип("ДокументОбъект.ПриходныйОрдерНаТовары"));
	Утверждения.ПроверитьРавенство(Результат, Истина, "Подкиска ЗаписатьВерсиюДокумента не содержит документа ПриходныйОрдер");
	
КонецПроцедуры	
