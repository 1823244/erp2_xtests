Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("ЗаполнениеНормативовПриСменеХарактеристики");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнениеНормативовПриСменеХарактеристики() Экспорт
	
	Структура = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "Организация");
	УдалитьДокументы(Структура.Организация);
	
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "ЗаполнениеНормативовПриСменеХарактеристики");
	
	ДокументОбъект = СтруктураДанных.ЗаказНаПроизводство.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение); //ЗаказНаПроизводство
	
	ДокументОбъект = СтруктураДанных.МаршрутныйЛист.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение); //МаршрутныйЛист
	
	// Создание 2 МЛ
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Распоряжение",  ДокументОбъект.Распоряжение);
	ДанныеЗаполнения.Вставить("Подразделение", ДокументОбъект.Подразделение);
	ДанныеЗаполнения.Вставить("УправлениеМаршрутнымиЛистами", ДокументОбъект.УправлениеМаршрутнымиЛистами);
	ДанныеЗаполнения.Вставить("КодСтроки", ДокументОбъект.КодСтроки);
	ДанныеЗаполнения.Вставить("КодСтрокиЭтапыГрафик", ДокументОбъект.КодСтрокиЭтапыГрафик);
	ДанныеЗаполнения.Вставить("Этап",      ДокументОбъект.Этап);
	ДанныеЗаполнения.Вставить("Начало",    ДокументОбъект.Начало);
	ДанныеЗаполнения.Вставить("Окончание", ДокументОбъект.Окончание);
	ДанныеЗаполнения.Вставить("НачалоРаботыКлючевогоРабочегоЦентра",    ДокументОбъект.НачалоРаботыКлючевогоРабочегоЦентраПоГрафику);
	ДанныеЗаполнения.Вставить("ОкончаниеРаботыКлючевогоРабочегоЦентра", ДокументОбъект.ОкончаниеРаботыКлючевогоРабочегоЦентраПоГрафику);
	ДанныеЗаполнения.Вставить("Запланировано", 1);
	ДанныеЗаполнения.Вставить("ДопроизводствоМаршрутногоЛиста", ДокументОбъект.Ссылка);
	
	ДокументОбъектНовый = Документы.МаршрутныйЛистПроизводства.СоздатьДокумент();
	ДокументОбъектНовый.Дата = '2017-10-01';
	ДокументОбъектНовый.Заполнить(ДанныеЗаполнения);
	
	СтрокаТЧ = ДокументОбъектНовый.МатериалыИУслуги[0];
	
	Утверждения.ПроверитьРавенство(СтрокаТЧ.Количество, 1.1, "Не верно рассчитался норматив");
	
КонецПроцедуры	

#Область УдалениеДокументов

Процедура УдалитьДокументы(Организация)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Отбор");
	
	ДобавитьДокумент(Таблица, "Документ.РасчетСебестоимостиТоваров");
	ДобавитьДокумент(Таблица, "Документ.РегламентнаяОперация");
	ДобавитьДокумент(Таблица, "Документ.ПереоценкаВалютныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученныйАванс");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданный");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданныйАванс");
	ДобавитьДокумент(Таблица, "Документ.ВзаимозачетЗадолженности");
	ДобавитьДокумент(Таблица, "Документ.РеализацияТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.СписаниеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.АктВыполненныхРабот");
	ДобавитьДокумент(Таблица, "Документ.РаспределениеПроизводственныхЗатрат");
	ДобавитьДокумент(Таблица, "Документ.СборкаТоваров");
	ДобавитьДокумент(Таблица, "Документ.ВыработкаСотрудников");
	ДобавитьДокумент(Таблица, "Документ.ВыпускПродукции");
	ДобавитьДокумент(Таблица, "Документ.ПередачаМатериаловВПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ПеремещениеТоваров");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПеремещение");
	ДобавитьДокумент(Таблица, "Документ.МаршрутныйЛистПроизводства");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученный");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеУслугПрочихАктивов");
	ДобавитьДокумент(Таблица, "Документ.ПриемНаРаботу");
	ДобавитьДокумент(Таблица, "Документ.НачислениеЗарплаты");
	ДобавитьДокумент(Таблица, "Документ.ОтражениеЗарплатыВФинансовомУчете");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПроизводство");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет КАК Док
	|ГДЕ
	|	Док.Организация = &Организация";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Текст1 = СтрЗаменить(ТекстЗапроса, "Документ.АвансовыйОтчет", СтрокаТЗ.Имя);
		Текст1 = СтрЗаменить(Текст1, "Док.Организация", СтрокаТЗ.Отбор);
		
		Запрос.Текст = Текст1;
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого Строка1 из ТаблицаДокументов Цикл
			
			Объект = Строка1.Ссылка.ПолучитьОбъект();
			
			Если Объект <> Неопределено Тогда
				
				Попытка
					Объект.Удалить();
				Исключение
					//Сообщить(Строка(ТипЗнч(Объект)) + ": " + Строка(Объект));
				КонецПопытки;
				
			КонецЕсли;	
					
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ДобавитьДокумент(Таблица, Имя, Отбор = "Организация")
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Имя   = Имя;
	НоваяСтрока.Отбор = Отбор;
	
КонецПроцедуры	

#КонецОбласти
