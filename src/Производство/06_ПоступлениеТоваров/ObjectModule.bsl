Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

Перем СтруктураДанных;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
	СтруктураДанных = ПолучитьСтруктуруДанных();
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ПТУ_Проведение");
	НаборТестов.Добавить("ПТУ_РегУчет");
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура ПТУ_Проведение() Экспорт
	
	ДокументОбъект = СтруктураДанных.ПоступлениеТоваровИУслуг.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ПТУ_РегУчет() Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктураДанных.ПоступлениеТоваровИУслуг, "Дата, Организация");
	
	СтруктураРеквизиты = Новый Структура("Ссылка, Дата, Организация", СтруктураДанных.ПоступлениеТоваровИУслуг, РеквизитыДокумента.Дата, РеквизитыДокумента.Организация);
	РеглУчетПроведениеСервер.ОтразитьДокумент(СтруктураРеквизиты, Истина);
	
КонецПроцедуры

Функция ПолучитьСтруктуруДанных()
	
	Макет = ПолучитьМакет("ПТУ");
	Структура = ГенераторТестовыхДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Возврат Структура;
	
КонецФункции




