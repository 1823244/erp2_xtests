Перем юТест;
Перем СтруктураДанных;

#Область ЮнитТестирование

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("ВыпускПродукции");
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура ПередЗапускомНабораТестов() Экспорт
	
	СтруктураДанных = ПолучитьСтруктуруДанных();
	
КонецПроцедуры

Процедура ПослеЗапускаНабораТестов() Экспорт
	
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура ВыпускПродукции() Экспорт
	
	Если СтруктураДанных.МассивМаршрутныхЛистов.Количество() = 0 Тогда
		ВызватьИсключение "Не найден маршрутный лист";
	КонецЕсли;	
	
	Для каждого МаршрутныйЛист из СтруктураДанных.МассивМаршрутныхЛистов Цикл
		ВыпускПродукцииПоМаршрутномуЛисту(МаршрутныйЛист);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВыпускПродукцииПоМаршрутномуЛисту(МаршрутныйЛист) Экспорт
	
	// ВводНаОснованииУТКлиент.СоздатьНаОснованииМаршрутныхЛистов
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(МаршрутныйЛист);
	
	ТекстПредупреждения = Неопределено;
	ПараметрыОформления = Документы.ВыпускПродукции.ПараметрыОформленияВыпуска(МассивСсылок, Неопределено, ТекстПредупреждения);
	Если ПараметрыОформления = Неопределено Тогда
		//Проверять не будем. Если есть, то перезаполним
		//ВызватьИсключение ТекстПредупреждения;
	КонецЕсли;
	
	ДанныеРаспоряжений = Новый Массив;
		
	СтруктураРаспоряжения = Новый Структура("Распоряжение", МаршрутныйЛист);
	ДанныеРаспоряжений.Добавить(СтруктураРаспоряжения);
	
	ПараметрыОснования = Новый Структура;
	ПараметрыОснования.Вставить("РеквизитыШапки",     ПараметрыОформления);
	ПараметрыОснования.Вставить("ДанныеРаспоряжений", ДанныеРаспоряжений);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.ВыпускПродукции КАК Док
	|ГДЕ
	|	Док.Распоряжение = &Распоряжение";
	
	Запрос.Параметры.Вставить("Распоряжение", МаршрутныйЛист);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДокументОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ДокументОбъект.Товары.Очистить();
	Иначе	
		ДокументОбъект = Документы.ВыпускПродукции.СоздатьДокумент();
	КонецЕсли;	
	ДокументОбъект.Заполнить(ПараметрыОснования);
	ДокументОбъект.Дата = '2016-01-25';
	
	ДокументОбъект.Товары[0].Калькуляция = СтруктураДанных.Калькуляция;
	
	ПараметрыКоллеции = Новый Структура();
	ПараметрыКоллеции.Вставить("Распоряжение", "Распоряжение");
	ПараметрыКоллеции.Вставить("Спецификация", "Спецификация");
	ПараметрыКоллеции.Вставить("ТипСтоимости", "ТипСтоимости");
	
	Строки = Новый Массив;
	Для каждого СтрокаТЧ из ДокументОбъект.Товары Цикл
		Строки.Добавить(СтрокаТЧ);
	КонецЦикла;	
	
	Документы.ПлановаяКалькуляция.ЗаполнитьЦеныПоКалькуляцииВКоллекции(
		ДокументОбъект.Товары,
		Строки,
		ПараметрыКоллеции);
	
	ДокументОбъект.Записать();
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Функция ПолучитьСтруктуруДанных()
	
	Структура = юТест.СоздатьДанныеПоМакетам(ЭтотОбъект, "Данные");
	
	МассивЗаказов = Новый Массив;
	МассивЗаказов.Добавить(Структура.ЗаказНаПроизводство1);
	
	Структура.Вставить("МассивЗаказов", МассивЗаказов);
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивЗаказов", МассивЗаказов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства КАК Док
	|ГДЕ
	|	Док.Распоряжение В (&МассивЗаказов)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Структура.Вставить("МассивМаршрутныхЛистов", Новый Массив);
	Иначе
		Структура.Вставить("МассивМаршрутныхЛистов", Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;	
	
	Возврат Структура;
	
КонецФункции



