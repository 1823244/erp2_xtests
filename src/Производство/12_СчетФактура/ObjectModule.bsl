Перем юТест;
Перем СтруктураДанных;

#Область ЮнитТестирование

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("СчетФактура");
	ВсеТесты.Добавить("Печать");
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура ПередЗапускомНабораТестов() Экспорт
	
	СтруктураДанных = ПолучитьСтруктуруДанных();
	
КонецПроцедуры

Процедура ПослеЗапускаНабораТестов() Экспорт
	
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

Процедура СчетФактура() Экспорт
	
	РеквизитыСчетаФактуры = Неопределено;
	ПараметрыОтбора = Новый Структура("Организация", СтруктураДанных.Организация);
	СчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(СтруктураДанных.Акт, ПараметрыОтбора, РеквизитыСчетаФактуры);
	
	Если СчетаФактуры.Количество() > 0 Тогда
		ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДокументыОснования.Очистить();
	Иначе
		ДокументОбъект = Документы.СчетФактураВыданный.СоздатьДокумент();
		ДокументОбъект.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураДанных.Акт, "Дата");
	КонецЕсли;	
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", СтруктураДанных.Акт);
	ДанныеЗаполнения.Вставить("Организация",       СтруктураДанных.Организация);
	
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	СтруктураДанных.Вставить("СчетФактура", ДокументОбъект.Ссылка);
	
КонецПроцедуры

Процедура Печать() Экспорт
	
	Если НЕ СтруктураДанных.Свойство("СчетФактура") Тогда
		
		РеквизитыСчетаФактуры = Неопределено;
		ПараметрыОтбора = Новый Структура("Организация", СтруктураДанных.Организация);
		СчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(СтруктураДанных.Акт, ПараметрыОтбора, РеквизитыСчетаФактуры);
		
		СтруктураДанных.Вставить("СчетФактура", РеквизитыСчетаФактуры.Ссылка);
		
	КонецЕсли;	
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(СтруктураДанных.СчетФактура);
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
	
	ПечатныеФормы = УправлениеПечатью.СформироватьПечатныеФормы("Обработка.ПечатьОбщихФорм", "СчетФактура",
		МассивОбъектов, ПараметрыПечати, Неопределено);
		
	ТабОригинал = ПолучитьМакет("СчетФактура");
	ТабДокумент = ПечатныеФормы.КоллекцияПечатныхФорм[0].ТабличныйДокумент;
	юТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(ТабОригинал, ТабДокумент,, "Не совпал результат");
		
КонецПроцедуры

Функция ПолучитьСтруктуруДанных()
	
	Макет = ПолучитьМакет("Данные");
	Структура = юТест.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Возврат Структура;
	
КонецФункции



