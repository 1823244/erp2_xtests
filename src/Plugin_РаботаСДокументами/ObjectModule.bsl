
// { Plugin interface
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Тип",           ВозможныеТипыПлагинов.Утилита);
	Результат.Вставить("Идентификатор", Метаданные().Имя);
	Результат.Вставить("Представление", Метаданные().Представление());
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
КонецПроцедуры
// } Plugin interface

Процедура УдалитьДокументыПоОрганизации(Организация) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Отбор");
	
	ДобавитьДокумент(Таблица, "Документ.РасчетСебестоимостиТоваров");
	ДобавитьДокумент(Таблица, "Документ.РегламентнаяОперация");
	ДобавитьДокумент(Таблица, "Документ.ПереоценкаВалютныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученныйАванс");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданный");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураВыданныйАванс");
	ДобавитьДокумент(Таблица, "Документ.ВзаимозачетЗадолженности");
	ДобавитьДокумент(Таблица, "Документ.РеализацияТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.ОтчетКомиссионера");
	ДобавитьДокумент(Таблица, "Документ.ОтчетКомитенту");
	ДобавитьДокумент(Таблица, "Документ.СписаниеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДобавитьДокумент(Таблица, "Документ.АктВыполненныхРабот");
	ДобавитьДокумент(Таблица, "Документ.РаспределениеПроизводственныхЗатрат");
	ДобавитьДокумент(Таблица, "Документ.СборкаТоваров");
	ДобавитьДокумент(Таблица, "Документ.ВыработкаСотрудников");
	ДобавитьДокумент(Таблица, "Документ.ВыпускПродукции");
	ДобавитьДокумент(Таблица, "Документ.ПередачаМатериаловВПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ПеремещениеТоваров");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПеремещение");
	ДобавитьДокумент(Таблица, "Документ.МаршрутныйЛистПроизводства");
	ДобавитьДокумент(Таблица, "Документ.СчетФактураПолученный");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеТоваровУслуг");
	ДобавитьДокумент(Таблица, "Документ.ПоступлениеУслугПрочихАктивов");
	ДобавитьДокумент(Таблица, "Документ.ПриемНаРаботу");
	ДобавитьДокумент(Таблица, "Документ.НачислениеЗарплаты");
	ДобавитьДокумент(Таблица, "Документ.ОтражениеЗарплатыВФинансовомУчете");
	ДобавитьДокумент(Таблица, "Документ.КорректировкаЗаказаМатериаловВПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ЗаказНаПроизводство");
	ДобавитьДокумент(Таблица, "Документ.ЗаказКлиента");
	ДобавитьДокумент(Таблица, "Справочник.КлючиАналитикиУчетаПоПартнерам");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет КАК Док
	|ГДЕ
	|	Док.Организация = &Организация";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Текст1 = СтрЗаменить(ТекстЗапроса, "Документ.АвансовыйОтчет", СтрокаТЗ.Имя);
		Текст1 = СтрЗаменить(Текст1, "Док.Организация", СтрокаТЗ.Отбор);
		
		Запрос.Текст = Текст1;
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого Строка1 из ТаблицаДокументов Цикл
			
			ДокументОбъект = Строка1.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект <> Неопределено Тогда
				
				Попытка
					ДокументОбъект.Удалить();
				Исключение
					//Сообщить(Строка(ТипЗнч(Объект)) + ": " + Строка(Объект));
				КонецПопытки;
				
			КонецЕсли;	
					
		КонецЦикла;	
		
	КонецЦикла;	
	
	Таблица.Очистить();
	ДобавитьДокумент(Таблица, "ТаможенныеДекларацииЭкспортКРегистрации");
	ДобавитьДокумент(Таблица, "АналитикаУчетаПоПартнерам");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Рег.*
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК Рег
	|ГДЕ
	|	Рег.Организация = &Организация";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Текст1 = СтрЗаменить(ТекстЗапроса, "АналитикаУчетаПоПартнерам", СтрокаТЗ.Имя);
		Текст1 = СтрЗаменить(Текст1, "Рег.Организация", СтрокаТЗ.Отбор);
		
		Запрос.Текст = Текст1;
		ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого Строка1 из ТаблицаДокументов Цикл
			
			Запись = РегистрыСведений[СтрокаТЗ.Имя].СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Строка1);
			
			Попытка
				Запись.Удалить();
			Исключение
				//Сообщить(Строка(ТипЗнч(Объект)) + ": " + Строка(Объект));
			КонецПопытки;
				
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ДобавитьДокумент(Таблица, Имя, Отбор = "Организация")
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Имя   = Имя;
	НоваяСтрока.Отбор = Отбор;
	
КонецПроцедуры	

Процедура ПровестиДокумент(Ссылка) Экспорт
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	

Процедура ПровестиДокументы(СсылкаИлиМассив) Экспорт
	
	Если ТипЗнч(СсылкаИлиМассив) = Тип("Массив") Тогда
		Массив = СсылкаИлиМассив;
	Иначе	
		Массив = Новый Массив;
	КонецЕсли;	
	
	Для каждого Ссылка из Массив Цикл
		ПровестиДокумент(Ссылка);
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗакрытьМесяц(Организация, ЗакрываемыйПериод) Экспорт
	
	Запись = РегистрыСведений.РегламентныеЗаданияЗакрытияМесяца.СоздатьМенеджерЗаписи();
	Запись.ЗакрываемыйПериод = ЗакрываемыйПериод;
	Запись.Организация       = Организация;
	Запись.Период            = ТекущаяДата();
	Запись.Записать();
	
	//ОбщегоНазначенияУТ.ВыполнитьЗакрытиеМесяца
	// в данной процедуре выполнение идет в фоне
	
	СписокОрганизаций = Новый Массив();
	Если ЗначениеЗаполнено(Организация) Тогда
		СписокОрганизаций.Добавить(Организация);
	КонецЕсли;
	
	МассивОпераций = Новый Массив();
	//++ НЕ УТ
	Для Каждого Значение Из Перечисления.ТипыРегламентныхОпераций Цикл
		Если Значение <> Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода Тогда
			МассивОпераций.Добавить(Значение);
		ИначеЕсли КонецМесяца(ЗакрываемыйПериод) = КонецГода(ЗакрываемыйПериод) Тогда // надо закрыть год
			МассивОпераций.Добавить(ЗакрываемыйПериод);
		КонецЕсли;
	КонецЦикла;
	//-- НЕ УТ
	
	ПараметрыРасчета = Новый Структура("СписокОрганизаций, Организация, ПериодРегистрации, Период, МассивОпераций, АдресХранилища");
	ПараметрыРасчета.СписокОрганизаций = СписокОрганизаций;
	ПараметрыРасчета.Организация = Организация;
	ПараметрыРасчета.ПериодРегистрации = ЗакрываемыйПериод;
	ПараметрыРасчета.Период = ЗакрываемыйПериод;
	ПараметрыРасчета.МассивОпераций = МассивОпераций;
	ПараметрыРасчета.АдресХранилища = Неопределено;
	
	ЗакрытиеМесяцаУТВызовСервера.РассчитатьЭтапы(ПараметрыРасчета);
	
КонецПроцедуры	